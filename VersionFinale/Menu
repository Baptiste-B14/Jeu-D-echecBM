import java.util.Scanner;


public class Menu {
    public static void menu(){

        Scanner sc = new Scanner(System.in).useDelimiter("\n");
        //Declaration et initialisation des tableaux de positionnement

        int[][] tblanc = {{0,4},{0,3},{0,2},{0,5},{0,1},{0,6},{0,0},{0,7},{1,0},{1,1},{1,2},{1,3},{1,4},{1,5},{1,6},{1,7}};
        int[][] tnoir = {{7,4},{7,3},{7,2},{7,5},{7,1},{7,6},{7,0},{7,7},{6,0},{6,1},{6,2},{6,3},{6,4},{6,5},{6,6},{6,7}};

        int couleur=0; //blanc =0; noir = 1
        int tour = 0;


        int piece;
        int[] position = new int[2];
        int[][] tabJoueur = new int[16][2];
        int[][] tabEnnemi = new int[16][2];

        do {

            //Joueur en cours.
            if (tour % 2 == 0) {//copie par for

                for(int i = 0; i<tblanc.length; i++){
                    tabJoueur[i] = tblanc[i];
                    tabEnnemi[i] = tnoir[i];
                }

            }else{
                for(int i = 0; i<tblanc.length; i++){
                    tabJoueur[i] = tnoir[i];
                    tabEnnemi[i] = tblanc[i];
                }

            }

            do{


                do{

                    do {
                    //Demande de selection du pion.
                    //Saisie forcée d'un pion valide
                    piece = Fonction.demandeSaisie(tabJoueur);

                    //Demande la future position de la pièce.

                    position = Fonction.demandePosition();


                    //Pas d'echec et mat (testé à la fin du tour précédent. Comme la position demandé ne met pas en echec
                    //on peut vérifier que la position est correcte.



                    }while(!Fonction.caseDisponible(position[0], position[1], tabJoueur));



                }while(!Fonction.verificationDeplacementPossible(tabJoueur, tabEnnemi, piece, position[1],position[1], couleur));


            }while(!Fonction.verificationDuChemin(piece, position[0], position[1], tabJoueur));

            Fonction.actualisationEchiquier(position[0], position[1],piece, couleur, tabJoueur, tabEnnemi);


        }while(Fonction.echecRoi(tabJoueur, tabEnnemi, couleur));//Tant que echec, alors on doit choisir une position valide






        //Joueur en cours.
        if (tour % 2 == 0) {
            tblanc = tabJoueur ;
            tnoir = tabEnnemi;
        }else{
            tnoir = tabJoueur;
            tblanc = tabEnnemi;
        }


        //affichage()


        if(Fonction.echecRoi(tabEnnemi, tabJoueur, couleur)){
            Fonction.echecEtMat();
        }






        tour++;
    }


}


